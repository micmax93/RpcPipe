/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RCB_H_RPCGEN
#define _RCB_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct rcallback_1_argument {
	int fid;
	int cbtype;
	int retval;
	char *msg;
};
typedef struct rcallback_1_argument rcallback_1_argument;

#define rcb 0x30100160
#define v1 1

#if defined(__STDC__) || defined(__cplusplus)
#define rcallback 1
extern  enum clnt_stat rcallback_1(int , int , int , char *, int *, CLIENT *);
extern  bool_t rcallback_1_svc(int , int , int , char *, int *, struct svc_req *);
extern int rcb_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define rcallback 1
extern  enum clnt_stat rcallback_1();
extern  bool_t rcallback_1_svc();
extern int rcb_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_rcallback_1_argument (XDR *, rcallback_1_argument*);

#else /* K&R C */
extern bool_t xdr_rcallback_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RCB_H_RPCGEN */
