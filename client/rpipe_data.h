/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPIPE_DATA_H_RPCGEN
#define _RPIPE_DATA_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct rpipe_put_1_argument {
	char *data;
	u_int data_size;
};
typedef struct rpipe_put_1_argument rpipe_put_1_argument;

#define rpipe_data 0x30100160
#define v1 1

#if defined(__STDC__) || defined(__cplusplus)
#define rpipe_put 1
extern  u_int * rpipe_put_1(char *, u_int , CLIENT *);
extern  u_int * rpipe_put_1_svc(char *, u_int , struct svc_req *);
#define rpipe_get 2
extern  char ** rpipe_get_1(u_int , CLIENT *);
extern  char ** rpipe_get_1_svc(u_int , struct svc_req *);
#define rpipe_info 3
extern  int * rpipe_info_1(int , CLIENT *);
extern  int * rpipe_info_1_svc(int , struct svc_req *);
extern int rpipe_data_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define rpipe_put 1
extern  u_int * rpipe_put_1();
extern  u_int * rpipe_put_1_svc();
#define rpipe_get 2
extern  char ** rpipe_get_1();
extern  char ** rpipe_get_1_svc();
#define rpipe_info 3
extern  int * rpipe_info_1();
extern  int * rpipe_info_1_svc();
extern int rpipe_data_1_freeresult ();
#endif /* K&R C */

extern u_char *r_data_ptr;
extern size_t r_data_size;

extern int register_callback(SVCXPRT *transp);
extern void wait_for_callback();
extern void unregister_callback(int prognum);

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_rpipe_put_1_argument (XDR *, rpipe_put_1_argument*);

#else /* K&R C */
extern bool_t xdr_rpipe_put_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPIPE_DATA_H_RPCGEN */
